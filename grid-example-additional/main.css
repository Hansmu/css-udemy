.container {
    margin: 20px;
    display: grid;
    /* When the grid display is applied, then the rows are generated automatically depending on your content. When we don't
     know how many rows we need, then we can rely on the grid to automatically create them. */
    /* auto-fill can be used to fill with as many elements as possible. So as many columns as can be fitted on one line. Once
    the cap is reached, they start getting placed on the next row. */
    /* auto-fit can be used when you don't have enough items to fill the row. It'll center the content. */
    grid-template-columns: repeat(auto-fill, 15rem);
    justify-content: center;
    grid-gap: 1.5rem;

    /* The below properties work for when you aren't defining the rows and columns explicitly yourself. That is, you can
     define some rows and columns initially and after the content runs out of space to place itself in, then new rows
     and columns start getting generated automatically. */
    /* The default is auto. It defines the behavior of the automatically generated rows.*/
    grid-auto-rows: minmax(8rem, auto);
    /* Defines where the content should be added automatically. The default is set to row. */
    grid-auto-flow: row;

    /* dense can be used to fill up all cells. For example if you have a cell that can fit a single element, but the following
     element takes up 2 cells, then you'd have an empty cell in the middle if there isn't enough for the 2 span cell. If you use dense, then
     another element is moved up to fill that space. This creates problems for screen readers, though. Screen readers read the DOM.
     If you change the element order, then screen readers will get different information compared to what the website actually
     looks like visually. CHANGING THE ORDER OF ELEMENTS VISUALLY ONLY IS NOT ALWAYS RECOMMENDED. */
    /*grid-auto-flow: row dense;*/

    /* If the automatic generation is set to column, then  you can define their size.*/
    grid-auto-columns: 5rem;
}

.quote {
  border: 1px solid #fa923f;
  background: #ffbd87;
  font-family: sans-serif;
  padding: 1rem;
  border-radius: 5px;
}

.quote:nth-of-type(2) {
    grid-column: span 2;
}

.quote--featured {
  border: #ff4213;
  background: #ff9f87;
  grid-column: span 2;
}