.container {
    margin: 150px auto;
    border: 1px solid black;
    width: 200px;
    height: 200px;
    /* perspective can also be used as a property, but it has to be on the parent. So you have the same perspective on
    all the children. */
    perspective: 200px;
    /* This can be used to define how far to the right or left you are with your perspective. */
    perspective-origin: 500px;
    /* By default, when you rotate the parent by 90 degrees, then all the children disappear as well.
     This is because the style is set to flat. So the 3D space inside of the parent is flat. */
    transform: rotateY(90deg);
    /* The default is flat. Preserve 3D would mean that the 3D space exists outside of the parent as well.
    So if you're applying a 90 degree transformation to the parent, then that 90 degrees get applied to the children in
     addition to what they already have applied to them. */
    transform-style: preserve-3d;
}

.box {
    background: red;
    width: 100%;
    height: 100%;
    /* rotateX gets applied towards you. Like watching a coin flip. rotateY gets applied from left to right.
    Like watching a coin flip but turned 90 degrees. */
    /* The above comments apply for the default perspective, which is Z. So you're watching the transformation happening
    from the Z axis. Using the perspective function you can define how close you are to the transformation. The smaller
    the number, the closer you are. */
    transform: /*perspective(200px)*/ rotateX(30deg) rotateY(70deg);
}